name: CI Pipeline

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Timeout for the entire job
    container:
      image: maven:3.8.3-openjdk-17
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Lint Code
        run: ./mvnw checkstyle:check
        continue-on-error: true

      - name: Build with Maven
        run: ./mvnw --batch-mode --update-snapshots clean compile
        continue-on-error: true

      - name: Run tests with Maven
        run: ./mvnw --batch-mode verify
        continue-on-error: true

      - name: Run JaCoCo Coverage
        run: ./mvnw jacoco:report
        continue-on-error: true

      # Commenting out OWASP Dependency-Check for now
      # - name: OWASP Dependency-Check
      #   run: ./mvnw org.owasp:dependency-check-maven:check
      #   continue-on-error: true

      - name: SonarQube Scan
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./mvnw sonar:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    timeout-minutes: 60  # Timeout for the entire job
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Docker image with Jib
        run: ./mvnw compile com.google.cloud.tools:jib-maven-plugin:3.2.1:build -Dimage=docker.io/anmobor/toni:latest

  scan-and-tag-docker:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    if: success()
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Trivy Vulnerability Scanner
        run: |
          docker pull docker.io/anmobor/toni:latest
          docker run --rm aquasec/trivy:latest image --exit-code 1 --severity HIGH,CRITICAL docker.io/anmobor/toni:latest
        continue-on-error: true

      - name: Tag Docker Image with GitHub SHA
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          old_tag=$latest_tag
          old_tag_number=$(echo $old_tag | sed 's/^v//')
          new_tag=v$(echo $old_tag_number | awk -F. '{print $1 "." $2 "." $3+1}')
          docker tag docker.io/anmobor/toni:latest docker.io/anmobor/toni:$new_tag
        continue-on-error: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Tag
        run: |
          docker push docker.io/anmobor/toni:$new_tag
        continue-on-error: true

  trufflehog-scan: # Secrets Scanning
    runs-on: ubuntu-latest
    needs: scan-and-tag-docker
    if: success()
    timeout-minutes: 30  # Timeout for the entire job
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: TruffleHog Secret Scanning
        run: docker run --rm -v "${{ github.workspace }}:/workspace" trufflesecurity/trufflehog:latest filesystem /workspace --only-verified
        continue-on-error: true